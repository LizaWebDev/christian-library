import React, { useState, useEffect, useCallback } from 'react';
import './App.css';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤
import { books } from './data/index.js';

function App() {
    const [selectedBook, setSelectedBook] = useState(null);
    const [selectedChapter, setSelectedChapter] = useState(0);
    const [sidebarOpen, setSidebarOpen] = useState(false);
    const [fontSize, setFontSize] = useState(18);
    const [darkMode, setDarkMode] = useState(false);
    const [showVerseNumbers, setShowVerseNumbers] = useState(true);
    const [expandedSections, setExpandedSections] = useState({});
    const [isMobile, setIsMobile] = useState(window.innerWidth < 768);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
    useEffect(() => {
        const handleResize = () => {
            setIsMobile(window.innerWidth < 768);
            if (window.innerWidth >= 768 && !sidebarOpen) {
                setSidebarOpen(true);
            }
            if (window.innerWidth < 768 && sidebarOpen) {
                setSidebarOpen(false);
            }
        };

        window.addEventListener('resize', handleResize);
        return () => window.removeEventListener('resize', handleResize);
    }, [sidebarOpen]);

    // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é –∫–Ω–∏–≥—É
    useEffect(() => {
        if (books.length > 0 && !selectedBook) {
            setSelectedBook(books[0]);
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ
            if (!isMobile) {
                setExpandedSections({
                    'old-testament': true,
                    'new-testament': true,
                    'marcion-gospel': true,
                    'apostolikon': true,
                    'nag-hammadi': true,
                    'other': true
                });
            }
        }
    }, []);

    const handleBookSelect = useCallback((book) => {
        setSelectedBook(book);
        setSelectedChapter(0);
        if (isMobile) {
            setSidebarOpen(false);
        }
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.scrollTo(0, 0);
    }, [isMobile]);

    const handleChapterSelect = useCallback((index) => {
        setSelectedChapter(index);
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –Ω–∞—á–∞–ª—É –≥–ª–∞–≤—ã
        const textContent = document.querySelector('.text-content');
        if (textContent) {
            textContent.scrollTo(0, 0);
        }
    }, []);

    const nextChapter = useCallback(() => {
        if (selectedBook && selectedChapter < selectedBook.chapters.length - 1) {
            setSelectedChapter(selectedChapter + 1);
            window.scrollTo(0, 0);
        }
    }, [selectedBook, selectedChapter]);

    const prevChapter = useCallback(() => {
        if (selectedBook && selectedChapter > 0) {
            setSelectedChapter(selectedChapter - 1);
            window.scrollTo(0, 0);
        }
    }, [selectedBook, selectedChapter]);

    const toggleSidebar = useCallback(() => {
        setSidebarOpen(prev => !prev);
    }, []);

    const increaseFontSize = useCallback(() => {
        setFontSize(prev => Math.min(prev + 1, 24));
    }, []);

    const decreaseFontSize = useCallback(() => {
        setFontSize(prev => Math.max(prev - 1, 14));
    }, []);

    const toggleDarkMode = useCallback(() => {
        setDarkMode(prev => !prev);
    }, []);

    const toggleVerseNumbers = useCallback(() => {
        setShowVerseNumbers(prev => !prev);
    }, []);

    const toggleSection = useCallback((section) => {
        setExpandedSections(prev => ({
            ...prev,
            [section]: !prev[section]
        }));
    }, []);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–µ–∫—Å—Ç–∞ —Å –Ω–æ–º–µ—Ä–∞–º–∏ —Å—Ç–∏—Ö–æ–≤
    const renderTextWithVerses = useCallback((content) => {
        return content.map((verse, index) => (
            <div key={index} className="verse-container">
                {showVerseNumbers && (
                    <span className="verse-number">
            {index + 1}
          </span>
                )}
                <span className="verse-text">{verse}</span>
            </div>
        ));
    }, [showVerseNumbers]);

    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–∏–≥–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    const booksByCategory = {
        'old-testament': books.filter(book => book.category === 'old-testament'),
        'new-testament': books.filter(book => book.category === 'new-testament'),
        'marcion-gospel': books.filter(book => book.category === 'marcion-gospel'),
        'apostolikon': books.filter(book => book.category === 'apostolikon'),
        'nag-hammadi': books.filter(book => book.category === 'nag-hammadi'),
        'other': books.filter(book => book.category === 'other')
    };

    const categoryTitles = {
        'old-testament': '–í–µ—Ç—Ö–∏–π –ó–∞–≤–µ—Ç',
        'new-testament': '–ù–æ–≤—ã–π –ó–∞–≤–µ—Ç',
        'marcion-gospel': '–ï–≤–∞–Ω–≥–µ–ª–∏–µ –ì–æ—Å–ø–æ–¥–Ω–µ (–ú–∞—Ä–∫–∏–æ–Ω–∞)',
        'apostolikon': '–ê–ø–æ—Å—Ç–æ–ª–∏–∫–æ–Ω –ú–∞—Ä–∫–∏–æ–Ω–∞',
        'nag-hammadi': '–ê–ø–æ–∫—Ä–∏—Ñ—ã –ù–∞–≥-–•–∞–º–º–∞–¥–∏',
        'other': '–î—Ä—É–≥–∏–µ —Ç–µ–∫—Å—Ç—ã'
    };

    const categoryClasses = {
        'marcion-gospel': 'marcion-gospel-header',
        'apostolikon': 'apostolikon-header'
    };

    return (
        <div className={`App ${darkMode ? 'dark-mode' : ''}`}>
            <header className="app-header">
                <button className="sidebar-toggle" onClick={toggleSidebar}>
                    {sidebarOpen ? '‚úï' : '‚ò∞'}
                    <span className="menu-text">{sidebarOpen ? '–ó–∞–∫—Ä—ã—Ç—å' : '–ú–µ–Ω—é'}</span>
                </button>
                <h1>–•—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞</h1>
                <div className="controls">
                    <button onClick={decreaseFontSize} title="–£–º–µ–Ω—å—à–∏—Ç—å —à—Ä–∏—Ñ—Ç">A-</button>
                    <span className="font-size-label">{fontSize}px</span>
                    <button onClick={increaseFontSize} title="–£–≤–µ–ª–∏—á–∏—Ç—å —à—Ä–∏—Ñ—Ç">A+</button>
                    <button
                        onClick={toggleVerseNumbers}
                        title={showVerseNumbers ? "–°–∫—Ä—ã—Ç—å –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤" : "–ü–æ–∫–∞–∑–∞—Ç—å –Ω–æ–º–µ—Ä–∞ —Å—Ç–∏—Ö–æ–≤"}
                        className={showVerseNumbers ? 'active' : ''}
                    >
                        ‚Ññ
                    </button>
                    <button onClick={toggleDarkMode} title="–ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º">
                        {darkMode ? '‚òÄÔ∏è' : 'üåô'}
                    </button>
                </div>
            </header>

            <div className="main-content">
                {/* Overlay –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ */}
                {isMobile && sidebarOpen && (
                    <div className="sidebar-overlay" onClick={() => setSidebarOpen(false)} />
                )}

                <aside className={`sidebar ${sidebarOpen ? 'open' : ''}`}>
                    <div className="sidebar-content">
                        <h2>–ö–Ω–∏–≥–∏</h2>
                        <div className="book-search">
                            <input
                                type="text"
                                placeholder="–ü–æ–∏—Å–∫ –∫–Ω–∏–≥–∏..."
                                className="search-input"
                            />
                        </div>
                        <div className="book-categories">
                            {Object.entries(booksByCategory).map(([category, categoryBooks]) => (
                                categoryBooks.length > 0 && (
                                    <div key={category} className="category-section">
                                        <h3
                                            onClick={() => toggleSection(category)}
                                            className={`category-header ${categoryClasses[category] || ''}`}
                                        >
                      <span className="collapse-icon">
                        {expandedSections[category] ? '‚ñº' : '‚ñ∫'}
                      </span>
                                            {categoryTitles[category]}
                                            <span className="book-count">({categoryBooks.length})</span>
                                        </h3>
                                        {expandedSections[category] && categoryBooks.map(book => (
                                            <div
                                                key={book.id}
                                                className={`book-item ${selectedBook?.id === book.id ? 'selected' : ''}`}
                                                data-category={category}
                                                onClick={() => handleBookSelect(book)}
                                            >
                                                {book.title}
                                            </div>
                                        ))}
                                    </div>
                                )
                            ))}
                        </div>
                    </div>
                </aside>

                <main className="reader">
                    {selectedBook ? (
                        <>
                            <div className="reader-header">
                                <div className="book-info">
                                    <h2>{selectedBook.title}</h2>
                                    {selectedBook.description && (
                                        <p className="book-description">{selectedBook.description}</p>
                                    )}
                                </div>
                                <div className="chapter-selector">
                                    <button
                                        onClick={prevChapter}
                                        disabled={selectedChapter === 0}
                                        className="chapter-nav-btn"
                                    >
                                        ‚Üê
                                    </button>
                                    <div className="chapter-info">
                                        <span className="chapter-label">–ì–ª–∞–≤–∞</span>
                                        <select
                                            value={selectedChapter}
                                            onChange={(e) => handleChapterSelect(parseInt(e.target.value))}
                                            className="chapter-select"
                                        >
                                            {selectedBook.chapters.map((_, index) => (
                                                <option key={index} value={index}>
                                                    {index + 1}
                                                </option>
                                            ))}
                                        </select>
                                        <span className="total-chapters">/{selectedBook.chapters.length}</span>
                                    </div>
                                    <button
                                        onClick={nextChapter}
                                        disabled={selectedChapter === selectedBook.chapters.length - 1}
                                        className="chapter-nav-btn"
                                    >
                                        ‚Üí
                                    </button>
                                </div>
                            </div>

                            <div
                                className="text-content"
                                style={{ fontSize: `${fontSize}px` }}
                            >
                                <div className="chapter-header">
                                    <h3>–ì–ª–∞–≤–∞ {selectedChapter + 1}</h3>
                                    {selectedBook.chapters[selectedChapter].description && (
                                        <p className="chapter-description">
                                            {selectedBook.chapters[selectedChapter].description}
                                        </p>
                                    )}
                                </div>
                                <div className="bible-text">
                                    {renderTextWithVerses(selectedBook.chapters[selectedChapter].content)}
                                </div>

                                {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
                                <div className="bottom-navigation">
                                    <button
                                        onClick={prevChapter}
                                        disabled={selectedChapter === 0}
                                        className="nav-btn large"
                                    >
                                        ‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è –≥–ª–∞–≤–∞
                                    </button>
                                    <button
                                        onClick={nextChapter}
                                        disabled={selectedChapter === selectedBook.chapters.length - 1}
                                        className="nav-btn large"
                                    >
                                        –°–ª–µ–¥—É—é—â–∞—è –≥–ª–∞–≤–∞ ‚Üí
                                    </button>
                                </div>
                            </div>
                        </>
                    ) : (
                        <div className="welcome-message">
                            <h2>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤</h2>
                            <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–∏–≥—É –∏–∑ –º–µ–Ω—é –¥–ª—è –Ω–∞—á–∞–ª–∞ —á—Ç–µ–Ω–∏—è.</p>
                            <div className="welcome-stats">
                                <div className="stat">
                                    <span className="stat-number">{books.length}</span>
                                    <span className="stat-label">–∫–Ω–∏–≥</span>
                                </div>
                                <div className="stat">
                  <span className="stat-number">{
                      books.reduce((total, book) => total + book.chapters.length, 0)
                  }</span>
                                    <span className="stat-label">–≥–ª–∞–≤</span>
                                </div>
                            </div>
                        </div>
                    )}
                </main>
            </div>

            {/* –ü–ª–∞–≤–∞—é—â–∞—è –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—é –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
            {isMobile && !sidebarOpen && (
                <button className="floating-menu-btn" onClick={toggleSidebar}>
                    ‚ò∞
                </button>
            )}
        </div>
    );
}

export default App;